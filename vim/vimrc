" Set shell (fixes issue when using the fish shell)
set shell=/bin/sh

"============ Searching ============"
"Highlight searches by default"
set hlsearch
set showmatch
set incsearch

"============ Tab width ============"
set tabstop=2
set shiftwidth=2
set expandtab "Makes vim substitute tab character with spaces"
set smartindent
set autoindent
set showbreak=...
set modeline
set modelines=5

set backspace=indent,eol,start

"============ Swap files ============"
"No swap files"
set noswapfile
set nobackup
set nowb

"============ Movement ============"
"Move one row instead of one line"
" nmap j gj
" nmap k gk

"============ Auto completion ============"
set wildmenu
set wildmode=list:longest,full
set wildignore=*.o,*.obj,*.pdf
set ignorecase
set smartcase

"============ Cursor ============"
if has("autocmd")
  au InsertEnter * set cul
  au InsertLeave * set nocul
endif

" conceal in insert (i), normal (n) and visual (v) modes
set concealcursor=inv
" hide concealed text completely unless replacement character is defined
set conceallevel=2

" Auto resource vimrc
au! BufWritePost .vimrc nested source %

" Pathogen
call pathogen#infect()
call pathogen#helptags()

filetype plugin on
filetype indent off

"========== Theme ============"
set number
syntax enable
set background=dark
colorscheme koehler
set t_Co=16

"============ Page width ============"
"set textwidth=80
hi ColorColumn ctermbg=235
execute "set colorcolumn=" . join(range(81,82), '|')
set listchars=tab:->,eol:$,trail:~
set list
hi NonText ctermfg=232
hi SpecialKey ctermfg=yellow ctermbg=red

"========== Map ============"

"== Unmap arrow keys =="
map <up>    <nop>
map <down>  <nop>
map <left>  <nop>
map <right> <nop>

let mapleader=","
nmap <silent> ,/ :nohlsearch<CR>
nmap <C-n> :NERDTreeToggle<CR>
nmap <C-h> :TlistToggle<CR>
nmap <F4> :A<CR>
nmap <F3> :AV<CR>

map ,p :CtrlP<CR>
map ,,p :CtrlPClearAllCaches<CR>
set timeoutlen=600
set ttimeoutlen=600

" Romeve trailing whitespace
map ,s :%s/\s\+$//g<CR><C-O>

nmap <C-n> :NERDTreeToggle<CR>
nmap <F4> :A<CR>
nmap <F3> :AV<CR>
nmap do ddO

"== w!! to sudo write =="
command! W execute ':silent w !sudo tee % >/dev/null' | edit!

"Status line
set statusline=%F\ %y%m\ %=\ %c:(%l/%L)
set laststatus=2

if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
endif

set wildignore+=*/tmp/*,*.o,*.so,*.hi,*.pdf,*.swp,*.zip     " MacOSX/Linux
"If we ever want to use windows, lolz
"set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows

if has("unix")
  let s:uname = system("uname")
  if s:uname == "Darwin\n"
    let g:clang_library_path = "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/"
  else
    let g:clang_library_path = "/usr/lib/llvm-3.5/lib/"

    if has('unnamedplus')
        set clipboard=unnamedplus
    else
        set clipboard=unnamed
    endif

  endif
endif

let g:clang_use_library      = 1
let g:clang_auto_select      = 0
let g:clang_complete_auto    = 1
let g:clang_complete_copen   = 1
let g:clang_complete_macros  = 1
let g:clang_complete_patters = 1
set completeopt=menu,longest
let g:clang_snippets = 1
let g:clang_snippets_engine = 'clang_complete'
let g:clang_conceal_snippets = 1
let g:clang_trailing_placeholder = 1
let g:clang_close_preview = 1

" vim-cpp-enhanced-highlight
let g:cpp_class_scope_highlight = 1
let g:cpp_experimental_template_highlight = 1

" vim-indent-guides
let g:indent_guides_guide_size = 1
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd ctermbg=237
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=242

" vim-airline
let g:airline_powerline_fonts = 1

" nerdtree
let NERDTreeIgnore = ["\.pyc", "\.so$", "\.a$"]

" ctags
nnoremap <silent> <F3> :TlistToggle<CR>

" ack.vim
let g:ack_default_options = " -s -H --nocolor --nogroup --column"
noremap ,f :Ack!<space>
noremap ,F :AckFromSearc!<CR>
