" vim: foldmethod=marker

" Set shell (fixes issue when using the fish shell) {{{1
set shell=/bin/sh

" Folding {{{1
set foldcolumn=3

" Searching {{{1
"Highlight searches by default"
set hlsearch
set showmatch
set incsearch
set showcmd

" Tab width {{{1
" Look under vim/vafter/ftplugin for language specific preferences
set tabstop=4
set shiftwidth=4
set expandtab "Makes vim substitute tab character with spaces"
set smartindent
set autoindent
set showbreak=...
set modeline
set modelines=5

set backspace=indent,eol,start

" Swap files {{{1
"No swap files"
set noswapfile
set nobackup
set nowb

" Auto completion {{{1
set wildmenu
set wildmode=list:longest,full
set ignorecase
set smartcase
set wildignore+=*/tmp/*,*.o,*.obj,*.pyc,*.pdf,*.so,*.hi,*.pdf,*.swp,*.zip,*/build/*,*.git/*,CMakeLists\.txt\.*

" Auto resource vimrc {{{1
if has("autocmd")
  autocmd bufwritepost vimrc source $MYVIMRC
endif

" Theme {{{1
set number
syntax enable
set background=dark
colorscheme koehler
set t_Co=16

" Cursor {{{1
"au InsertEnter * hi CursorLine ctermbg=238
function! HighlightLine()
  hi CursorLine ctermbg=237 cterm=NONE
endfunction

function! UnHighlightLine()
  hi CursorLine ctermbg=235 cterm=NONE
endfunction

au InsertEnter * call HighlightLine()
au InsertLeave * call UnHighlightLine()
set cul
call UnHighlightLine()

" conceal in insert (i), normal (n) and visual (v) modes
set concealcursor=inv
" hide concealed text completely unless replacement character is defined
set conceallevel=2

" Pathogen {{{1
call pathogen#infect()
call pathogen#helptags()

" Turn on filetype-based plugins {{{1
filetype plugin on
filetype indent off

" Page width {{{1
"set textwidth=80
" hi ColorColumn ctermbg=235
" execute "set colorcolumn=" . join(range(81,82), '|')
set listchars=tab:\>\ ,eol:$,trail:~
set list
hi NonText ctermfg=237

" Set all SpecialKey colors to yellow on red (to get trailing whitespace to
" really pop). We'll fix prepending SpecialKeys with indent_guides later
hi SpecialKey ctermfg=237

" Keymaps {{{1

" Unmap arrow keys
map <up>    <nop>
map <down>  <nop>
map <left>  <nop>
map <right> <nop>

let mapleader=","
nmap <silent> ,/ :nohlsearch<CR>
nmap <F4> :A<CR>
nmap <F3> :AV<CR>

map ,p :CtrlP<CR>
map ,,p :CtrlPClearAllCaches<CR>
set timeoutlen=600
set ttimeoutlen=600

" Romeve trailing whitespace
map ,s :%s/\s\+$//g<CR><C-O>

nmap <C-n> :NERDTreeToggle<CR>
nmap <F4> :A<CR>
nmap <F3> :AV<CR>
nmap do ddO
nmap <C-c> :q<CR>

" w!! to sudo write
command! W execute ':silent w !sudo tee % >/dev/null' | edit!

" Open vimrc for edit
nmap <leader>v :tabe $MYVIMRC<CR>

" Status line {{{1
set statusline=%F\ %y%m\ %=\ %c:(%l/%L)
set laststatus=2

" Plugins {{{1
" Clang complete {{{2
if has("unix")
  let s:uname = system("uname")
  if s:uname == "Darwin\n"
    let g:clang_library_path = "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/"
  else
    let g:clang_library_path = "/usr/lib/llvm-3.5/lib/"

    if has('unnamedplus')
        set clipboard=unnamedplus
    else
        set clipboard=unnamed
    endif

  endif
endif

let g:clang_use_library      = 1
let g:clang_auto_select      = 0
let g:clang_complete_auto    = 1
let g:clang_complete_copen   = 1
let g:clang_complete_macros  = 1
let g:clang_complete_patters = 1
set completeopt=menu,longest
let g:clang_snippets = 1
let g:clang_snippets_engine = 'clang_complete'
let g:clang_conceal_snippets = 1
let g:clang_trailing_placeholder = 1
let g:clang_close_preview = 1

" vim-cpp-enhanced-highlight {{{2
let g:cpp_class_scope_highlight = 1
let g:cpp_experimental_template_highlight = 1

" vim-indent-guides {{{2
let g:indent_guides_guide_size = 1
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd ctermbg=234 ctermfg=238
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=236 ctermfg=240

" vim-airline {{{2
let g:airline_powerline_fonts = 1

" nerdtree {{{2
let NERDTreeIgnore = ["\.pyc", "\.so$", "\.a$", "build/*", "CMakeLists\.txt\..*"]

" ack.vim {{{2
let g:ack_default_options = " -s -H --nocolor --nogroup --column"
noremap ,f :Ack!<space>
noremap ,F :AckFromSearc!<CR>

" c.vim {{{2
let g:C_MapLeader = 'Ã¥'

" UltiSnips {{{2
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsListSnippets="<C-tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<S-tab>"
let g:UltiSnipsEditSplit="vertical"

" vim-markdown {{{2
let g:markdown_folding=1
