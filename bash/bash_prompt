
#################################################
# This file has been auto generated.		#
# If you make any changes to it there is 	#
# a risk those changes will be overwritten.	#
#################################################

# Install location:
# /home/barber/programming/dotfiles



# Icons
GIT_ICON_OK="⚑";
GIT_ICON_CHANGES="⚑";
GIT_ICON_DIRTY="⚑";

# regular colors
black="\033[0;30m"    # black
gray="\033[0;34m"		# gray
red="\033[0;31m"    # red
green="\033[0;32m"    # green
yellow="\033[0;33m"    # yellow
blue="\033[0;34m"    # blue
magenta="\033[0;35m"    # magenta
cyan="\033[0;36m"    # cyan
white="\033[1;37m"    # white
orange="\e[33;40m"	# orange

 # emphasized (bolded) colors
BK="\033[1;30m"
BR="\033[1;31m"
BG="\033[1;32m"
BY="\033[1;33m"
BB="\033[1;34m"
BM="\033[1;35m"
BC="\033[1;36m"
BW="\033[1;37m"

 # reset
RESET="\[\033[0;00m\]"

function __git_prompt {
	if git branch > /dev/null 2>&1 ; then
		message="";
		if [[ $(git status | grep "working directory clean") ]]; then
			message="$green$GIT_ICON_OK";
		elif [[ $(git status | grep "untracked files present") ]]; then 
			message="$red$GIT_ICON_DIRTY";
		else
			message="$yellow$GIT_ICON_CHANGES";
		fi

		echo -ne " $cyan($(parse_git_branch) $message$cyan)";

	else
		echo " ";
	fi
}

function parse_git_branch {
	echo -ne $(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/*\(.*\)/\1/');
}



